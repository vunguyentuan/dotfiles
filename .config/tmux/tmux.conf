set-option -g default-terminal 'screen-256color'
set-option -g terminal-overrides ',xterm-256color:RGB'
set-option -g focus-events on # TODO: learn how this works
# set-option -sa terminal-overrides ",xterm*:Tc"

unbind C-b
set -g prefix C-a
bind C-a send-prefix

# interactive switch sessions
# bind C-j display-popup -E "~/.cargo/bin/tms"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g escape-time 0         # zero-out escape time delay
# set -g history-limit 1000000 # increase history size (from 2,000)
set -g mouse on              # enable mouse support
set -g renumber-windows on   # renumber all windows when any window is closed
set -g set-clipboard on      # use system clipboard
set -g status-interval 3     # update the status bar every 3 seconds

set -g status-left "#[fg=blue,bold]#S"
set -ga status-left " #[fg=white,nobold]#(gitmux -cfg $HOME/.config/tmux/gitmux.conf)"
set -g status-left-length 200            # increase length (from 10)
set -g status-position top               # macOS / darwin style
# set -g status-right '#{pomodoro_status}' # toggle 25m pomodoro
set -g status-right-length 6             # decrease length (from 10)
set -g status-style 'bg=default'         # transparent

set -g window-status-current-format '#[fg=magenta]#W'
set -g window-status-format '#[fg=gray]#W'

set -g default-terminal "${TERM}"
set -g message-command-style bg=default,fg=yellow
set -g message-style bg=default,fg=yellow
set -g mode-style bg=default,fg=yellow
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'

# set -g status-right " #(tms sessions)"


set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'
set -g @t-fzf-prompt '  '
set -g @tmux-last-prompt-pattern ' '
set -g @tmux-nerd-font-window-name-shell-icon ''
set -g @tmux-nerd-font-window-name-show-name false

# set -g @catppuccin_flavour 'mocha'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'joshmedeski/tmux-fzf-url'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'mskelton/tmux-last'

run '~/.tmux/plugins/tpm/tpm'

# set vi-mode
set-window-option -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind v split-window -v -c "#{pane_current_path}"
bind h split-window -h -c "#{pane_current_path}"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-w if-shell "$is_vim" "send-keys C-w"  "switch-client -T table1"
bind-key -T table1 h select-pane -L
bind-key -T table1 j select-pane -D
bind-key -T table1 k select-pane -U
bind-key -T table1 l select-pane -R
bind-key -T table1 v split-window -h -c "#{pane_current_path}"
bind-key -T table1 s split-window -v -c "#{pane_current_path}"

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key j resize-pane -D 10
bind-key k resize-pane -U 10
bind-key h resize-pane -L 10
bind-key l resize-pane -R 10

# Use Vim keybindings for copying into tmux buffer
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Copy from tmux buffer to clipboard
# Require reattach-to-user-namespace
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "Copied to clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "Copied to clipboard"

bind c new-window -c '#{pane_current_path}'
bind g new-window -n '?' gitui
bind G new-window -n '?' gh dash

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Shift Alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

# bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt (cmd+w)
bind-key e send-keys "tmux capture-pane -p -S - | nvim -c 'set buftype=nofile' +" Enter
